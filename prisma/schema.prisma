generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  githubId             BigInt                @id @unique
  installationId       BigInt
  githubUsername       String?               @unique
  superteamUsername    String?               @unique
  leetcodeUsername     String?               @unique
  codeforcesUsername   String?               @unique
  hackerrankUsername   String?               @unique
  codechefUsername     String?               @unique
  gfgUsername          String?               @unique
  gitlabUsername       String?               @unique
  email                String?               @unique
  emails               String[]              @default([])
  verifiedEmail        Boolean               @default(false)
  totalPoints          Int                   @default(0)
  emailOtp             String?
  GithubDevProfile     GithubDevProfile?
  HackerrankProfile    HackerrankProfile?
  GFGProfile           GFGProfile?
  CodeChefProfile      CodeChefProfile?
  LeetcodeProfile      LeetcodeProfile?
  SuperteamEarnProfile SuperteamEarnProfile?
  Unescrowed           Unescrowed?
}

model GithubDevProfile {
  User                      User?  @relation(fields: [githubId], references: [githubId])
  githubId                  BigInt @id @unique
  stars                     Int
  forks                     Int
  forkedRepos               Int
  originalRepos             Int
  followers                 Int
  totalCommits              Int
  repositoriesContributedTo Int
  pullRequests              Int
  mergedPullRequests        Int
  totalIssues               Int
}

model HackerrankProfile {
  User          User?  @relation(fields: [githubId], references: [githubId])
  githubId      BigInt @id @unique
  currentPoints Int
  stars         Int
}

model GFGProfile {
  User           User?  @relation(fields: [githubId], references: [githubId])
  githubId       BigInt @id @unique
  score          Int
  problemsSolved Int
}

model CodeChefProfile {
  User          User?  @relation(fields: [githubId], references: [githubId])
  githubId      BigInt @id @unique
  currentRating Int
}

model LeetcodeProfile {
  User       User?  @relation(fields: [githubId], references: [githubId])
  githubId   BigInt @id @unique
  easyQues   Int
  mediumQues Int
  hardQues   Int
}

model SuperteamEarnProfile {
  User           User?  @relation(fields: [githubId], references: [githubId])
  githubId       BigInt @id @unique
  participations Int
  wins           Int
  totalWinnings  Int
}

model Unescrowed {
  User              User?    @relation(fields: [githubId], references: [githubId])
  githubId          BigInt   @id @unique
  subHeading        String
  image             String
  name              String
  link              String
  description       String
  twitter           String
  telegram          String
  discord           String
  bountyname        String
  price             Int
  bountyDescription String
  skills            String[]
  time              String
  contact           String
}
